
name: Build & Test C++ CMake Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  workflow_dispatch:  # Enables Workflow to Run Manually

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        os: [windows-latest]
        compiler: [msvc]
        
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Check installed Visual Studio versions
      run: |
        Get-Command -Name devenv -ErrorAction SilentlyContinue
        Get-Command -Name msbuild -ErrorAction SilentlyContinue
        
    - name: Set up Visual Studio
      run: |
        choco install visualstudio2019community
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
        RefreshEnv
        
    - name: Install vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        cd vcpkg
        bootstrap-vcpkg.bat
        
    - name: Install SQLite3 with vcpkg
      run: |
        vcpkg install sqlite3:x64-windows
        vcpkg integrate install
        
    - name: Install JSON with vcpkg
      run: |
        vcpkg install jsoncpp:x64-windows
        vcpkg integrate install
        vcpkg install nlohmann-json
        vcpkg integrate install
        
    - name: Print vcpkg Triplets
      run: vcpkg integrate powershell

    - name: Print Environment Variables
      run: |
        echo "Environment Variables:"
        env
    
    - name: Run Unit Tests
      run : |
        cd ./Unittest
        cmake -S ./ -B ./build-unittest "-DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
        cmake --build ./build-unittest --config Release
        cd ./build-unittest/Release
        ./Unittest.exe

    - name: Setup CodeQL
      uses: github/codeql-action/init@v1

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Analyze
      uses: github/codeql-action/analyze@v1

    - name: Upload results
      uses: actions/upload-artifact@v2
      with:
        name: bugfinder-results
        path: .github/workflows/BugFinderReports/bug-finder-report-${{ github.run_number }}-${{ github.run_id }}-${{ github.sha }}.txt
        
